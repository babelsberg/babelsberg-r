fails:Array#pack with format 'H' taints the output string if the format string is tainted
fails:Array#pack with format 'h' taints the output string if the format string is tainted
fails:Array#pack with format 'h' encodes the least significant nibble of a non alphanumeric character as the least significant nibble of the hex value
fails:ignores whitespace in the format string
fails:calls #to_str to coerce the directives string
fails:raises an ArgumentError if there are fewer elements than the format requires
fails:encodes no bytes when passed zero as the count modifier
fails:raises a TypeError if the object does not respond to #to_str
fails:raises a TypeError if #to_str does not return a String
fails:calls #to_str to convert an Object to a String
fails:implicitly has count equal to the string length when passed the '*' modifier
fails:encodes the first character as the most significant nibble when passed no count modifier
fails:encodes count nibbles when passed a count modifier exceeding the string length
fails:encodes the first character as the most significant nibble of a hex value
fails:encodes the second character as the least significant nibble of a hex value
fails:encodes the least significant nibble of a non alphanumeric character as the most significant nibble of the hex value
fails:returns an ASCII-8BIT string
fails:encodes the first character as the least significant nibble when passed no count modifier
fails:Array#pack with format 'h' encodes the first character as the least significant nibble of a hex value
fails:Array#pack with format 'h' encodes the second character as the most significant nibble of a hex value
fails:Array#pack with format 'H' ignores whitespace in the format string
fails:Array#pack with format 'H' calls #to_str to coerce the directives string
fails:Array#pack with format 'H' raises an ArgumentError if there are fewer elements than the format requires
fails:Array#pack with format 'H' encodes no bytes when passed zero as the count modifier
fails:Array#pack with format 'H' raises a TypeError if the object does not respond to #to_str
fails:Array#pack with format 'H' raises a TypeError if #to_str does not return a String
fails:Array#pack with format 'H' calls #to_str to convert an Object to a String
fails:Array#pack with format 'H' encodes the first character as the most significant nibble when passed no count modifier
fails:Array#pack with format 'H' implicitly has count equal to the string length when passed the '*' modifier
fails:Array#pack with format 'H' encodes count nibbles when passed a count modifier exceeding the string length
fails:Array#pack with format 'H' encodes the first character as the most significant nibble of a hex value
fails:Array#pack with format 'H' encodes the second character as the least significant nibble of a hex value
fails:Array#pack with format 'H' encodes the least significant nibble of a non alphanumeric character as the most significant nibble of the hex value
fails:Array#pack with format 'H' returns an ASCII-8BIT string
fails:Array#pack with format 'h' ignores whitespace in the format string
fails:Array#pack with format 'h' calls #to_str to coerce the directives string
fails:Array#pack with format 'h' raises an ArgumentError if there are fewer elements than the format requires
fails:Array#pack with format 'h' encodes no bytes when passed zero as the count modifier
fails:Array#pack with format 'h' raises a TypeError if the object does not respond to #to_str
fails:Array#pack with format 'h' raises a TypeError if #to_str does not return a String
fails:Array#pack with format 'h' calls #to_str to convert an Object to a String
fails:Array#pack with format 'h' encodes the first character as the least significant nibble when passed no count modifier
fails:Array#pack with format 'h' implicitly has count equal to the string length when passed the '*' modifier
fails:Array#pack with format 'h' encodes count nibbles when passed a count modifier exceeding the string length
fails:Array#pack with format 'h' returns an ASCII-8BIT string
