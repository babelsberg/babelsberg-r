fails:StringIO#truncate when passed [length] returns the passed length
fails:StringIO#truncate when passed [length] truncated the underlying string down to the passed length
fails:StringIO#truncate when passed [length] does not create a copy of the underlying string
fails:StringIO#truncate when passed [length] does not change the position
fails:StringIO#truncate when passed [length] can grow a string to a larger size, padding it with \000
fails:StringIO#truncate when passed [length] raises an Errno::EINVAL when the passed length is negative
fails:StringIO#truncate when passed [length] tries to convert the passed length to an Integer using #to_int
fails:StringIO#truncate when passed [length] returns the passed length Object, NOT the result of #to_int
fails:StringIO#truncate when passed [length] raises a TypeError when the passed length can't be converted to an Integer
fails:StringIO#truncate when self is not writable raises an IOError
